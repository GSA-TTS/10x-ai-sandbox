{"version":3,"mappings":"movDAMA,MAAMA,GAAmBC,GAAmB,CACrC,MAAAC,EAAeC,GAASF,CAAI,EAElCA,SAAK,GAAG,cAAe,IAAM,CAC5BC,EAAa,IAAID,CAAI,EACrB,EACDA,EAAK,GAAG,SAAU,IAAM,CACvBC,EAAa,IAAID,CAAI,EACrB,EACDA,EAAK,GAAG,QAAS,IAAMC,EAAa,IAAID,CAAI,CAAC,EAC7CA,EAAK,GAAG,kBAAmB,IAAM,CAChCC,EAAa,IAAID,CAAI,EACrB,EACMC,CACR,EAEME,GAAwBH,GAAmB,CAC1CI,QAAYF,GAAS,EAAK,EAGhCF,SAAK,GAAG,SAAWK,GAAc,CAEhC,OAAO,KAAKA,CAAS,EAAE,SAAW,GAAKD,EAAU,IAAI,EAAK,EAC1D,EAGDJ,EAAK,GAAG,gBAAiB,IAAM,CAC9BI,EAAU,IAAI,EAAI,EAClB,EAEMA,CACR,EAEaE,GAAYC,GAAsC,CAC1D,IAAAC,EAAiBD,EAClB,CAAC,cAAe,cAAc,EAC9B,CAAC,cAAe,eAAgB,WAAW,EAC1CE,EAAwBF,EAAgB,CAACA,CAAa,EAAI,CAAC,OAAO,EAEhE,MAAAG,EAAe,CAACC,EAAkBC,IACvCC,+yHAGCC,EAAA,IAAIC,GAAmBL,CAAY,CAAC,EACpC,IAAIM,EAAgB,EACpB,KAAK,CACL,MAAO,GACP,UAAW,CACV,MAAOR,EACP,OAAQ,CAAC,cAAc,EACvB,kBAAmB,OACnB,mBAAoB,QACrB,EACA,YAAa,CACZ,QAASC,CACV,EACA,GAAI,cACJ,kBAAmB,GACnB,cAAe,CACd,YAAa,EACd,EACA,CACH,EAEMT,GAAOD,GAAgBe,CAAO,EACbX,GAAqBW,CAAO,EAE5C,MAAMG,GAAe,UACR,MAAAC,EAAA,IAAM,OAAO,yBAA0B,EAAG","names":["createI18nStore","i18n","i18nWritable","writable","createIsLoadingStore","isLoading","resources","initI18n","defaultLocale","detectionOrder","fallbackDefaultLocale","loadResource","language","namespace","__variableDynamicImportRuntimeHelper","i18next","resourcesToBackend","LanguageDetector","getLanguages","__vitePreload"],"sources":["../../../../../../src/lib/i18n/index.ts"],"sourcesContent":["import i18next from 'i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport type { i18n as i18nType } from 'i18next';\nimport { writable } from 'svelte/store';\n\nconst createI18nStore = (i18n: i18nType) => {\n\tconst i18nWritable = writable(i18n);\n\n\ti18n.on('initialized', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\ti18n.on('loaded', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\ti18n.on('added', () => i18nWritable.set(i18n));\n\ti18n.on('languageChanged', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\treturn i18nWritable;\n};\n\nconst createIsLoadingStore = (i18n: i18nType) => {\n\tconst isLoading = writable(false);\n\n\t// if loaded resources are empty || {}, set loading to true\n\ti18n.on('loaded', (resources) => {\n\t\t// console.log('loaded:', resources);\n\t\tObject.keys(resources).length !== 0 && isLoading.set(false);\n\t});\n\n\t// if resources failed loading, set loading to true\n\ti18n.on('failedLoading', () => {\n\t\tisLoading.set(true);\n\t});\n\n\treturn isLoading;\n};\n\nexport const initI18n = (defaultLocale: string | undefined) => {\n\tlet detectionOrder = defaultLocale\n\t\t? ['querystring', 'localStorage']\n\t\t: ['querystring', 'localStorage', 'navigator'];\n\tlet fallbackDefaultLocale = defaultLocale ? [defaultLocale] : ['en-US'];\n\n\tconst loadResource = (language: string, namespace: string) =>\n\t\timport(`./locales/${language}/${namespace}.json`);\n\n\ti18next\n\t\t.use(resourcesToBackend(loadResource))\n\t\t.use(LanguageDetector)\n\t\t.init({\n\t\t\tdebug: false,\n\t\t\tdetection: {\n\t\t\t\torder: detectionOrder,\n\t\t\t\tcaches: ['localStorage'],\n\t\t\t\tlookupQuerystring: 'lang',\n\t\t\t\tlookupLocalStorage: 'locale'\n\t\t\t},\n\t\t\tfallbackLng: {\n\t\t\t\tdefault: fallbackDefaultLocale\n\t\t\t},\n\t\t\tns: 'translation',\n\t\t\treturnEmptyString: false,\n\t\t\tinterpolation: {\n\t\t\t\tescapeValue: false // not needed for svelte as it escapes by default\n\t\t\t}\n\t\t});\n};\n\nconst i18n = createI18nStore(i18next);\nconst isLoadingStore = createIsLoadingStore(i18next);\n\nexport const getLanguages = async () => {\n\tconst languages = (await import(`./locales/languages.json`)).default;\n\treturn languages;\n};\nexport default i18n;\nexport const isLoading = isLoadingStore;\n"],"file":"_app/immutable/chunks/index.80e10a5e.js"}