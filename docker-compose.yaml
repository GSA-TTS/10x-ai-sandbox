services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL="postgres://postgres:postgres@db:5432/postgres"
      - WEBSOCKET_MANAGER="redis"
      - WEBSOCKET_REDIS_URL="redis://redis:6379/0"
    volumes:
      - app-data:/app
    ports:
      - "8080:8080"
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.325"
          memory: "700M"
        reservations:
          cpus: "0.2"
          memory: "600M"
    depends_on:
      - db
      - redis
    networks:
      backend:
        aliases:
          - app

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "256M"
        reservations:
          cpus: "0.1"
          memory: "128M"
    networks:
      - backend

  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres # pragma: allowlist secret
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
        reservations:
          cpus: "0.3"
          memory: "512M"
    networks:
      backend:
        aliases:
          - db

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: "256M"
        reservations:
          cpus: "0.1"
          memory: "128M"
    networks:
      backend:
        aliases:
          - redis

networks:
  backend:
    driver: overlay # bridge for non-swarm mode

volumes:
  db-data:
  redis-data:
  app-data: